# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  jobs:
  - job: firstjob
    steps: 
    - bash: echo Build FirstJob
    - bash: echo $(PipelineLevelVariable)
    - bash: echo $(Build.BuildNumber)
    - bash: echo $(Build.Buildid)
    - bash: echo $(Build.SourceBranchname)
    - bash: echo $(Build.SourcesDirectory)
    - bash: echo $(System.DefaultWorkingDirectory)
    - bash: ls -R $(System.DefaultWorkingDirectory)
    - bash: echo $(Build.ArtifactStagingDirectory)
    - bash: java -version
    - bash: node --version
    - bash: python --version
    - bash: mvn -version
    - bash: ls -R $(Build.ArtifactStagingDirectory)
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **/*.yaml
          **/*.tf
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - bash: ls -R $(Build.ArtifactStagingDirectory)

  # - job: SecondJob
  #   steps: 
  #   - bash: echo Build SecondJob
# - stage: DevDeploy
#   variables:  
#     environment: Dev
#   dependsOn: Build
#   jobs:
#   - job: DevDeployjob
#     steps: 
#     - bash: echo $(PipelineLevelVariable)Deployjob
# - stage: QADeploy
#   variables:  
#     environment: Dev
#   dependsOn: Build
#   jobs:
#    - job: QADeployJob
#      steps: 
#      - bash: echo $(PipelineLevelVariable)Deployjob
# - stage: ProdDeploy
#   dependsOn:
#   - DevDeploy
#   - QADeploy
#   jobs:
#   - job: ProDeployjJob
#     steps: 
#     - bash: echo build ProdDeployJob